//two stacks
class MinStack {
public:
    stack<int> st1;
    stack<int> st2;
    
    MinStack() {    
    }
    
    void push(int x) {
        st1.push(x);
        if(st2.top() >= x or st2.empty()) st2.push(x);
    }
    
    void pop() {
        if(st1.top() == st2.top()) st2.pop();
        st1.pop();
    }
    
    int top() {
        return st1.top();
    }
    
    int getMin() {
        return st2.top();
    }
};

//  vectors
class MinStack {
public:
    /** initialize your data structure here. */
    vector<pair<int,int> > v;
    MinStack() {
        
    }
    
    void push(int x) {
        if(v.empty())
            v.push_back({x,x});
        else{
            int mn=v.back().second;
            
            if(x<mn)
                v.push_back({x,x});
            else v.push_back({x,mn});
        }
    }
    
    void pop() {
        v.pop_back();
    }
    
    int top() {
        return v.back().first;
    }
    
    int getMin() {
                return v.back().second;
    }
};
